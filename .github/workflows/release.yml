name: Initiate Release
 
on:
  push:
    tags:
      - "oss-v*"
 
jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Get the version
        id: get_version
        run: echo "version=${GITHUB_REF:15}" >> $GITHUB_OUTPUT

      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Verify new release tag
        shell: pwsh
        run: |
          #
          # Verify the tag to make sure minver can find it.
          #
          $tag="oss-v${{ steps.get_version.outputs.version }}"
          # only check the first tag of every maintained release
          if ($tag -like "oss-v*.*.0") {
            Write-Output "Checking tag: $($tag)"
            $branchesWithTag = $(git branch --all --contains $tag) -join " "
            if (-not ($branchesWithTag -match "main")) {
              Write-Error "Tag $($tag) should be created with a commit from master and not from a release branch!"
            }
          } else {
            Write-Output "Skip checking tag: $($tag)"
          }

      - name: Perform Release 
        run: |
          curl -X POST https://api.github.com/repos/EventStore/TrainStation/dispatches \
          -H 'Accept: application/vnd.github.everest-preview+json' \
          -u ${{ secrets.GH_PAT }} \
          --data '{"event_type": "release", "client_payload": { "repository": "'"$GITHUB_REPOSITORY"'", "version": "${{ steps.get_version.outputs.version }}" }}'